// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/kaixinhupo/quick/controller"
	"github.com/kaixinhupo/quick/dao/database"
	"github.com/kaixinhupo/quick/dao/repository"
	"github.com/kaixinhupo/quick/infrastruture/config"
	"github.com/kaixinhupo/quick/infrastruture/db"
	"github.com/kaixinhupo/quick/service/biz"
	"github.com/kaixinhupo/quick/service/contract"
)

import (
	_ "github.com/kaixinhupo/quick/docs"
)

// Injectors from wire.go:

func InitUserController() *controller.UserController {
	xormConfig := config.DatasourceConfig()
	engine := db.DefaultEngine(xormConfig)
	userRepositoryImpl := database.NewUserRepository(engine)
	userServiceImpl := biz.NewUserService(userRepositoryImpl, engine)
	userController := controller.NewUserController(userServiceImpl)
	return userController
}

func InitGenController() *controller.GenController {
	genConfig := config.GenerateConfig()
	genController := controller.NewGenController(genConfig)
	return genController
}

// wire.go:

// xorm engine
var xormEngineSet = wire.NewSet(config.DatasourceConfig, db.DefaultEngine)

// repository.UserRepository
var userRepositorySet = wire.NewSet(database.NewUserRepository, wire.Bind(new(repository.UserRepository), new(*database.UserRepositoryImpl)))

// contract.UserService
var userServiceSet = wire.NewSet(biz.NewUserService, wire.Bind(new(contract.UserService), new(*biz.UserServiceImpl)))
